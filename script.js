let peer;
const video = document.getElementById('video');
const out = document.getElementById('out');
const input = document.getElementById('in');

// –°—Ç—Ä–∏–º–µ—Ä: –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —ç–∫—Ä–∞–Ω–æ–º
document.getElementById('share-screen').onclick = async () => {
  try {
    const stream = await navigator.mediaDevices.getDisplayMedia({
      video: {
        frameRate: { ideal: 60, max: 60 },
        width: { ideal: 3840, max: 3840 },
        height: { ideal: 2160, max: 2160 },
        displaySurface: 'monitor'
      },
      audio: true
    });

    const audioTracks = stream.getAudioTracks();
    if (audioTracks.length === 0) {
      alert("üîá –ó–≤—É–∫ –Ω–µ –∑–∞—Ö–≤–∞—á–µ–Ω. –ü—Ä–∏ –≤—ã–±–æ—Ä–µ —ç–∫—Ä–∞–Ω–∞ –≤–∫–ª—é—á–∏ –≥–∞–ª–æ—á–∫—É '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–æ –∑–≤—É–∫–æ–º'");
    } else {
      console.log("üé§ –ó–∞—Ö–≤–∞—á–µ–Ω –∞—É–¥–∏–æ—Ç—Ä–µ–∫:", audioTracks[0].label);
    }

    peer = new SimplePeer({ initiator: true, trickle: false, stream });

    peer.on('signal', data => {
      out.value = JSON.stringify(data);
    });

    peer.on('connect', () => {
      console.log('üü¢ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    });

    peer.on('error', err => console.error('‚ùå –û—à–∏–±–∫–∞:', err));
  } catch (err) {
    alert('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ö–≤–∞—Ç–∏—Ç—å —ç–∫—Ä–∞–Ω: ' + err.message);
    console.error(err);
  }
};

// –ó—Ä–∏—Ç–µ–ª—å: –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
document.getElementById('start-viewer').onclick = () => {
  peer = new SimplePeer({ initiator: false, trickle: false });

  peer.on('signal', data => {
    out.value = JSON.stringify(data);
  });

  peer.on('stream', stream => {
    const audioTracks = stream.getAudioTracks();
    if (audioTracks.length === 0) {
      alert("üîá –í –ø–æ–ª—É—á–µ–Ω–Ω–æ–º –ø–æ—Ç–æ–∫–µ –Ω–µ—Ç –∑–≤—É–∫–∞");
    } else {
      console.log("üéß –ü–æ–ª—É—á–µ–Ω –∞—É–¥–∏–æ—Ç—Ä–µ–∫:", audioTracks[0].label);
    }

    video.srcObject = stream;
    video.autoplay = true;
    video.muted = false;
    video.controls = true;

    video.play().catch(err => {
      console.warn("‚ö†Ô∏è –í–∏–¥–µ–æ –Ω–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏:", err);
    });
  });

  peer.on('connect', () => {
    console.log('üü¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ —Å—Ç—Ä–∏–º–µ—Ä—É');
  });

  peer.on('error', err => console.error('‚ùå –û—à–∏–±–∫–∞:', err));
};

// –û–±–º–µ–Ω —Å–∏–≥–Ω–∞–ª–∞–º–∏
document.getElementById('connect').onclick = () => {
  try {
    const signal = JSON.parse(input.value);
    peer.signal(signal);
  } catch (err) {
    alert('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å–∏–≥–Ω–∞–ª–∞');
  }
};
